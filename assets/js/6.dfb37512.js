(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{330:function(t,n,i){},344:function(t,n,i){"use strict";var s=i(330);i.n(s).a},352:function(t,n,i){"use strict";i.r(n);i(344);var s=i(0),a=Object(s.a)({},function(){var t=this,n=t.$createElement,i=t._self._c||n;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("Lin CMS 的构筑思想是有其自身特点的。下面我们阐述一些 Lin 的主要特点。")]),t._v(" "),t._m(2),t._v(" "),i("p",[t._v("这意味着，Lin 既提供后台的支撑，也有一套对应的前端系统，当然双端分离的好处不仅仅\n在于此，Lin 目前已有 Python 、Node.js 和 Java 版本的实现。")]),t._v(" "),i("p",[t._v("为什么 Lin 要选择前后端分离的单页面架构呢？")]),t._v(" "),i("p",[t._v("首先，传统的网站开发更多的是采用服务端渲染的方式，需用使用一种模板语言在服务端完\n成页面渲染：比如 JinJa2、Jade 等。服务端渲染的好处在于可以比较好的支持 SEO，但作\n为内部使用的 CMS 管理系统，SEO 并不重要。")]),t._v(" "),i("p",[t._v("但一个不可忽视的事实是，服务器渲染的页面到底是由前端开发者来完成，还是由服务器开\n发者来完成？其实都不太合适。现在已经没有多少前端开发者是了解这些服务端模板语言的\n，而服务器开发者本身是不太擅长开发页面的。那还是分开吧，前端用最熟悉的 Vue 写 JS\n和 CSS，而服务器只关注自己的 API 即可。")]),t._v(" "),i("p",[t._v("其次，单页面应用程序的体验本身就要好于传统网站。")]),t._v(" "),t._m(3),t._v(" "),i("p",[t._v("Lin 已经内置了 CMS 中最为常见的需求：用户管理、权限管理、日志系统等。开发者只需\n要集中精力开发自己的 CMS 业务即可。")]),t._v(" "),t._m(4),t._v(" "),i("p",[t._v("Lin CMS 除了内置常见的功能外，还提供了一套开发规范与工具类。换句话说，开发者无需\n再纠结如何验证参数？如何操作数据库？如何做全局的异常处理？API 的结构如何？前端结\n构应该如何组织？这些问题 Lin CMS 已经给出了解决方案。当然，如果你不喜欢 Lin 给出\n的架构，那么自己去实现自己的 CMS 架构也是可以的。但通常情况下，你确实无需再做出\n架构上的改动，Lin 可以满足绝大多数中小型的 CMS 需求。")]),t._v(" "),i("p",[t._v("举例来说，每个 API 都需要校验客户端传递的参数。但校验的方法有很多种，不同的开发\n者会有不同的构筑方案。但 Lin 提供了一套验证机制，开发者无需再纠结如何校验参数，\n只需模仿 Lin 的校验方案去写自己的业务即可。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),i("p",[t._v("任何优秀的框架都需要考虑到扩展。而 Lin 的扩展支持是通过插件的思想来设计的。当你\n需要新增一个功能时，你既可以直接在 Lin 的目录下编写代码，也可以将功能以插件的形\n式封装。比如，你开发了一个文章管理功能，你可以选择以插件的形式来发布，这样其他开\n发者通过安装你的插件就可以使用这个功能了。毫无疑问，以插件的形式封装功能将最大化\n代码的可复用性。你甚至可以把自己开发的插件发布，以提供给其他开发者使用。这种机制\n相当的棒。")]),t._v(" "),t._m(7),t._v(" "),i("p",[t._v("Lin 还将提供一套类似于 Vue Element 的前端组件库，以方便前端开发者快速开发。相比\n于 Vue Element 或 iView 等成熟的组件库，Lin 所提供的组件库将针对 Lin CMS 的整体\n设计风格、交互体验等作出大量的优化，使用 Lin 的组件库将更容易开发出体验更好的\nCMS 系统。当然，Lin 本身不限制开发者选用任何的组件库，你完全可以根据自己的喜好/\n习惯/熟悉度，去选择任意的一个基于 Vue 的组件库，比如前面提到的 Vue Element 和\niView 等。你甚至可以混搭使用。当然，前提是这些组件库是基于 Vue 的。")]),t._v(" "),t._m(8),t._v(" "),i("p",[t._v("我们将提供详尽的文档来帮助开发者使用 Lin。")]),t._v(" "),t._m(9),t._v(" "),i("p",[t._v("由于 Lin 采用的是前后端分离的架构，所以你至少需要熟悉 Python(Node.js 或者 Java)\n和 Vue。")]),t._v(" "),i("p",[t._v("Lin 的服务端框架是基于 Python Flask 的，所以如果你比较熟悉 Flask 的开发模式，那\n将可以更好的使用 Lin。但如果你并不熟悉 Flask，我们认为也没有太大的关系，因为 Lin\n本身已经提供了一套完整的开发机制，你只需要在 Lin 的框架下用 Python 来编写自己的\n业务代码即可。照葫芦画瓢应该就是这种感觉。")]),t._v(" "),i("p",[t._v("如果你不熟悉 Python，甚至说不会 Python，没关系。我们的\n"),i("a",{attrs:{href:"https://github.com/TaleLin/lin-cms-koa",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),i("OutboundLink")],1),t._v(" 版本已经发布。")]),t._v(" "),i("p",[t._v("但前端不同，前端还是需要开发者比较熟悉 Vue 的。但我想以 Vue 在国内的普及程度，绝\n大多数的开发者是没有问题的。这也正是我们选择 Vue 作为前端框架的原因。如果你喜欢\nReact Or Angular，那么加入我们，为 Lin 开发一个对应的版本吧。")]),t._v(" "),i("p",[i("strong",[t._v("想要深入了解这些项目的实现原理？请"),i("router-link",{attrs:{to:"./lin/imooc/"}},[t._v("前往")])],1)]),t._v(" "),t._m(10),t._v(" "),i("RightMenu")],1)},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[this._v("#")]),this._v(" 介绍")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"什么是-lin-cms"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-lin-cms","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是 Lin CMS?")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"lin-cms-是一个前后端分离的-cms-解决方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lin-cms-是一个前后端分离的-cms-解决方案","aria-hidden":"true"}},[this._v("#")]),this._v(" Lin CMS 是一个前后端分离的 CMS 解决方案")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"框架本身已内置了-cms-常用的功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#框架本身已内置了-cms-常用的功能","aria-hidden":"true"}},[this._v("#")]),this._v(" 框架本身已内置了 CMS 常用的功能")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"lin-cms-本身也是一套开发规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lin-cms-本身也是一套开发规范","aria-hidden":"true"}},[this._v("#")]),this._v(" Lin CMS 本身也是一套开发规范")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("还是基于这样的一个原则："),n("strong",[this._v("Lin CMS 只需要开发者关注自己的业务开发，它已经内置了很\n多机制帮助开发者快速开发自己的业务。")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"基于插件的扩展"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基于插件的扩展","aria-hidden":"true"}},[this._v("#")]),this._v(" 基于插件的扩展")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"前端组件库支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端组件库支持","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端组件库支持")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"完善的文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#完善的文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 完善的文档")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"所需基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#所需基础","aria-hidden":"true"}},[this._v("#")]),this._v(" 所需基础")])},function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"row"},[n("p",{staticClass:"action"},[n("a",{staticClass:"action-button",attrs:{href:"/lin/start/koa/"}},[this._v("koa快速开始 →")])]),this._v(" "),n("p",{staticClass:"action"},[n("a",{staticClass:"action-button",attrs:{href:"/lin/start/flask/"}},[this._v("flask快速开始 →")])]),this._v(" "),n("p",{staticClass:"action"},[n("a",{staticClass:"action-button",attrs:{href:"/lin/start/spring-boot/"}},[this._v("spring-boot快速开始 →")])])])}],!1,null,null,null);a.options.__file="README.md";n.default=a.exports}}]);